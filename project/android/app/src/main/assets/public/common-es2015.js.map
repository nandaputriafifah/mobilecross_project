{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/haptic-7b8ba70a.js","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./src/app/home/game.service.ts","./src/app/home/batik.service.ts","./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./node_modules/@ionic/core/dist/esm/button-active-5da929d4.js","./src/app/home/authentication.service.ts","./src/app/home/province.service.ts","./node_modules/@ionic/core/dist/esm/theme-5641d27f.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA,qBAAqB,iBAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;ACzGpI;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;;;;;;;;AC7GkB;AACX;AAC4C;IAU/D,WAAW,SAAX,WAAW;IAUtB,2CAA2C;IAC3C,EAAE;IACF,2CAA2C;IAC3C,oBAAoB;IACpB,cAAc;IACd,kBAAkB;IAClB,eAAe;IACf,kBAAkB;IAClB,YAAY;IACZ,EAAE;IACF,iCAAiC;IACjC,uBAAuB;IACvB,gBAAgB;IAChB,qBAAqB;IACrB,WAAW;IACX,oBAAoB;IACpB,EAAE;IACF,EAAE;IACF,oCAAoC;IACpC,6BAA6B;IAC7B,iBAAiB;IACjB,gBAAgB;IAChB,mBAAmB;IAEnB,YAAoB,EAAuB;QAAvB,OAAE,GAAF,EAAE,CAAqB;QAjC3C,yBAAyB;QACjB,WAAM,GAAG,OAAO,CAAC;QACzB,YAAO,GAA0B,IAAI,CAAC;QACtC,YAAO,GAA0B,IAAI,CAAC;QAEtC,cAAS,GAAW,EAAE,CAAC;QACvB,QAAG,GAAG,gDAAQ,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACvC,gBAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;QA2BvD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACpC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC;IAED,2BAA2B;IAC3B,YAAY;QACV,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAGD,gBAAgB;IAChB,oDAAoD;IACpD,wEAAwE;IACxE,IAAI;IAEJ,WAAW;QACT,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;CAsFF;;YApJO,0EAAmB;;AAUd,WAAW;IAHvB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,WAAW,CA0IvB;AA1IuB;;;;;;;;;;;;;;;;;;;ACZmB;AACiC;IAM/D,YAAY,SAAZ,YAAY;IAKvB,YAAoB,EAAuB;QAAvB,OAAE,GAAF,EAAE,CAAqB;QAJ3C,0BAA0B;QAClB,WAAM,GAAG,QAAQ,CAAC;QAC1B,aAAQ,GAA2B,IAAI,CAAC;QAGtC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACvC,CAAC;IAED,2BAA2B;IAC3B,WAAW;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;CACF;;YAnBO,0EAAmB;;AAMd,YAAY;IAHxB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,YAAY,CAaxB;AAbwB;;;;;;;;;;;;;ACPzB;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAqD;AACD;AACmE;;AAEvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wEAAa;AACxB;AACA;AACA;AACA,uEAAuE,qDAAoB;AAC3F,sEAAsE,qDAAsB;AAC5F;AACA;AACA,YAAY,6DAAkB;AAC9B;AACA;AACA,KAAK;AACL;;AAE0C;;;;;;;;;;;;;;;;;;;;;;;AC/DO;AACE;AACgC;AAC5C;AAEP;AAC4C;AAC5E,qCAAqC;IAMxB,qBAAqB,SAArB,qBAAqB;IAmBhC,YACW,OAAyB,EACzB,UAA2B,EAC3B,MAAc,EACd,MAAc,EACd,EAAuB;QAJvB,YAAO,GAAP,OAAO,CAAkB;QACzB,eAAU,GAAV,UAAU,CAAiB;QAC3B,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAqB;QAtBlC,YAAO,GAA0B,IAAI,CAAC;QAwBpC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACzC,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC5D,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;aAC1C;iBAAM;gBACL,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;gBACnC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;aACzC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+BAA+B;IAC/B,MAAM,CAAC,KAAK,EAAE,QAAQ;QACpB,OAAO,IAAI,CAAC,UAAU,CAAC,0BAA0B,CAAC,KAAK,EAAE,QAAQ,CAAC;IACpE,CAAC;IAED,oCAAoC;IACpC,kDAAkD;IAClD,2EAA2E;IAC3E,IAAI;IAEJ,YAAY,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ;QAC1C,OAAO,gDAAQ,CAAC,IAAI,EAAE,CAAC,8BAA8B,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;YACnF,IAAI,IAAI,EAAE;gBACR,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC;gBAChC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;gBAEhC,0BAA0B;gBAC1B,gDAAQ,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC;oBACnD,IAAI,EAAE,IAAI;oBACV,SAAS,EAAE,QAAQ;oBACnB,MAAM,EAAE,KAAK;oBACb,YAAY,EAAE,CAAC;oBACf,aAAa,EAAE,qJAAqJ;iBACrK,EAAE,CAAC,KAAK,EAAE,EAAE;oBACX,IAAI,KAAK,EAAE;wBACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;qBACpB;yBAAM;wBACL,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;qBAC/B;gBACH,CAAC,CAAC,CAAC;aACJ;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACjB,sBAAsB;YACtB,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC;YAC7B,MAAM,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAC1B,OAAO,YAAY,CAAC;YACpB,MAAM;QACR,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAA4C;IAC5C,oBAAoB;QAClB,OAAO,gDAAQ,CAAC,IAAI,EAAE,CAAC,WAAW,CAAC,qBAAqB,EAAE;aACrD,IAAI,CAAC,GAAG,EAAE;YACT,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAC9C,CAAC,CAAC;IACR,CAAC;IAED,mBAAmB;IACnB,eAAe,CAAC,kBAAkB;QAChC,OAAO,IAAI,CAAC,UAAU,CAAC,sBAAsB,CAAC,kBAAkB,CAAC;aAC5D,IAAI,CAAC,GAAG,EAAE;YACT,MAAM,CAAC,KAAK,CAAC,8DAA8D,CAAC,CAAC;QAC/E,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACjB,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACT,CAAC;IAED,sCAAsC;IACtC,IAAI,UAAU;QACZ,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QACtD,OAAO,CAAC,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,aAAa,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IACxE,CAAC;IAED,6CAA6C;IAC7C,IAAI,eAAe;QACjB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QACtD,OAAO,CAAC,IAAI,CAAC,aAAa,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IACvD,CAAC;IAED,iBAAiB;IACjB,wBAAwB;IACxB,qDAAqD;IACrD,4BAA4B;IAC5B,kCAAkC;IAClC,iDAAiD;IACjD,aAAa;IACb,yCAAyC;IACzC,8BAA8B;IAC9B,8BAA8B;IAC9B,WAAW;IACX,IAAI;IAEJ,6BAA6B;IAC7B,sBAAsB;IACtB,8FAA8F;IAC9F,6BAA6B;IAC7B,6BAA6B;IAC7B,yBAAyB;IACzB,uBAAuB;IACvB,+BAA+B;IAC/B,yCAAyC;IACzC,yCAAyC;IACzC,mCAAmC;IACnC,mCAAmC;IACnC,sDAAsD;IACtD,MAAM;IACN,mCAAmC;IACnC,kBAAkB;IAClB,OAAO;IACP,IAAI;IAEJ,yCAAyC;IACzC,OAAO;QACL,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;YACzC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6BAA6B;IAC7B,kBAAkB;IAClB,gCAAgC;IAChC,IAAI;IAEJ,WAAW;QACT,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;CAeF;;YAzLO,wEAAgB;YADhB,kEAAe;YAEf,sDAAM;YAHM,oDAAM;YAMlB,0EAAmB;;AAOd,qBAAqB;IAHjC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,qBAAqB,CA8KjC;AA9KiC;;;;;;;;;;;;;;;;;;;ACbS;AACiC;IAM/D,eAAe,SAAf,eAAe;IAK1B,YAAoB,EAAuB;QAAvB,OAAE,GAAF,EAAE,CAAqB;QAJ7C,wBAAwB;QACd,WAAM,GAAG,WAAW,CAAC;QAC7B,gBAAW,GAA8B,IAAI,CAAC;QAG5C,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;CACF;;YAlBO,0EAAmB;;AAMd,eAAe;IAH3B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,eAAe,CAY3B;AAZ2B;;;;;;;;;;;;;ACP5B;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,kCAAkC,MAAM,UAAU;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF","file":"common-es2015.js","sourcesContent":["const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionEnd();\n        }\n        else {\n            engine.gestureSelectionEnd();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","import { Injectable } from '@angular/core';\r\nimport firebase from \"firebase\";\r\nimport {AngularFireDatabase, AngularFireList} from \"@angular/fire/database\";\r\nimport {Batik} from \"./batik\";\r\nimport {Quiz} from \"./quiz\";\r\nimport {User} from \"./user\";\r\nimport {AngularFireModule} from \"@angular/fire\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GameService {\r\n  // Database path for quiz\r\n  private dbPath = '/quiz';\r\n  quizRef: AngularFireList<Quiz> = null;\r\n  userRef: AngularFireList<User> = null;\r\n  user_id;\r\n  totalQuiz: number = 10;\r\n  ref = firebase.database().ref('/quiz');\r\n  randomIndex = Math.floor(Math.random() * this.totalQuiz);\r\n\r\n  // // database = firebase.database().ref();\r\n  //\r\n  // // Get data from users table in firebase\r\n  // users_array = [];\r\n  // users_name;\r\n  // users_username;\r\n  // users_email;\r\n  // users_password;\r\n  // users_id;\r\n  //\r\n  // // Get data from quiz database\r\n  // quiz_questions = [];\r\n  // quiz_choices;\r\n  // quiz_answers = [];\r\n  // quiz_id;\r\n  // quiz_counter = 0;\r\n  //\r\n  //\r\n  // // Get data from results database\r\n  // results_user_results = [];\r\n  // results_score;\r\n  // results_user;\r\n  // results_user_id;\r\n\r\n  constructor(private db: AngularFireDatabase) {\r\n    this.quizRef = db.list(this.dbPath);\r\n    this.userRef = db.list('users/');\r\n  }\r\n\r\n  // Use this to get all data\r\n  getAllQuizes(): AngularFireList<Quiz> {\r\n    return this.quizRef;\r\n  }\r\n\r\n\r\n  // getUserId() {\r\n  //   this.user_id = firebase.auth().currentUser.uid;\r\n  //   return firebase.database().ref('users/'+ this.user_id + '/points');\r\n  // }\r\n\r\n  getUserData(): AngularFireList<User> {\r\n    return this.userRef;\r\n  }\r\n\r\n  // getUserDataById(){\r\n  //   firebase.auth().onAuthStateChanged((user) => {\r\n  //     if (user) {\r\n  //       // User logged in already or has just logged in.\r\n  //       this.user_id = user.uid;\r\n  //       console.log('===USER ID===', this.user_id);\r\n  //       return  firebase.database().ref('users/'+ this.user_id + '/points');\r\n  //     } else {\r\n  //       // User not logged in or has just logged out.\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // getUser() {\r\n  //   let user = firebase.auth().currentUser;\r\n  //   if (user) {\r\n  //     var getUserInfo = firebase.database().ref('users/' + user.uid);\r\n  //     getUserInfo.once('value', function(snapshot) {\r\n  //       console.log('GET USERRRRR', snapshot.val()); //returns net_worth, etc\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  // // quiz code\r\n  // batikQuiz(quizId) {\r\n  //   this.quiz_counter = 0;\r\n  //   // this.clearArray(this.questions);\r\n  //   const rootRef = firebase.database().ref('quiz/');\r\n  //   rootRef.once('value', (snapshot) => {\r\n  //     const value = snapshot.val();\r\n  //     for (const key in value) {\r\n  //       this.quiz_counter++;\r\n  //       this.quiz_questions.push({\r\n  //         counter: this.quiz_counter,\r\n  //         question: key,\r\n  //         answer: Object.keys(value[key]),\r\n  //         value: Object.values(value[key])\r\n  //       });\r\n  //       // console.log(this.Questionz);\r\n  //       // console.log(key);\r\n  //       // console.log(value);\r\n  //     }\r\n  //   });\r\n  //   console.log(this.quiz_questions);\r\n  //\r\n  //   return this.quiz_questions;\r\n  // }\r\n\r\n  //\r\n  // clearArray(array) {\r\n  //   for (let i = 0; i < array.length; i++) {\r\n  //     array.splice(i);\r\n  //   }\r\n  // }\r\n  //\r\n  // // get results from firebase\r\n  // getResults(userId) {\r\n  //   this.counter = 0;\r\n  //   // let resultsquestion;\r\n  //   // let gameID;\r\n  //   // let values;\r\n  //   this.clearArray(this.results);\r\n  //   return firebase.database().ref('results/' + userId +  name).once('value').then( (snapshot) => {\r\n  //     const values = snapshot.val();\r\n  //     console.log(values);\r\n  //\r\n  //     return snapshot.val();\r\n  //\r\n  //   });\r\n  // }\r\n  //\r\n  // UserInfor() {\r\n  //   firebase.auth().onAuthStateChanged((user) => {\r\n  //     // console.log(user);\r\n  //     if (user) {\r\n  //       this.user_id = user.uid;\r\n  //     } else {\r\n  //       // No user is signed in.\r\n  //     }\r\n  //   });\r\n  //\r\n  //   return this.user_id;\r\n  // }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {AngularFireDatabase, AngularFireList} from \"@angular/fire/database\";\r\nimport {Batik} from \"./batik\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BatikService {\r\n  // Database path for batik\r\n  private dbPath = '/batik';\r\n  batikRef: AngularFireList<Batik> = null;\r\n\r\n  constructor(private db: AngularFireDatabase) {\r\n    this.batikRef = db.list(this.dbPath);\r\n  }\r\n\r\n  // Use this to get all data\r\n  getAllBatik(): AngularFireList<Batik> {\r\n    return this.batikRef;\r\n  }\r\n}\r\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","import { c as writeTask } from './index-92848855.js';\nimport { createGesture } from './index-eea61379.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-7b8ba70a.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n    let currentTouchedButton;\n    let initialTouchedButton;\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const target = document.elementFromPoint(x, y);\n        if (!target || !isButton(target)) {\n            clearActiveButton();\n            return;\n        }\n        if (target !== currentTouchedButton) {\n            clearActiveButton();\n            setActiveButton(target, hapticFeedbackFn);\n        }\n    };\n    const setActiveButton = (button, hapticFeedbackFn) => {\n        currentTouchedButton = button;\n        if (!initialTouchedButton) {\n            initialTouchedButton = currentTouchedButton;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\n        hapticFeedbackFn();\n    };\n    const clearActiveButton = (dispatchClick = false) => {\n        if (!currentTouchedButton) {\n            return;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\n        /**\n         * Clicking on one button, but releasing on another button\n         * does not dispatch a click event in browsers, so we\n         * need to do it manually here. Some browsers will\n         * dispatch a click if clicking on one button, dragging over\n         * another button, and releasing on the original button. In that\n         * case, we need to make sure we do not cause a double click there.\n         */\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n            currentTouchedButton.click();\n        }\n        currentTouchedButton = undefined;\n    };\n    return createGesture({\n        el,\n        gestureName: 'buttonActiveDrag',\n        threshold: 0,\n        onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n        onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n        onEnd: () => {\n            clearActiveButton(true);\n            hapticSelectionEnd();\n            initialTouchedButton = undefined;\n        }\n    });\n};\n\nexport { createButtonActiveGesture as c };\n","import {Injectable, NgZone} from '@angular/core';\r\nimport {AngularFireAuth} from '@angular/fire/auth';\r\nimport {AngularFirestore, AngularFirestoreDocument} from '@angular/fire/firestore';\r\nimport {Router} from '@angular/router';\r\nimport {User} from './user';\r\nimport firebase from 'firebase';\r\nimport {AngularFireDatabase, AngularFireList} from '@angular/fire/database';\r\n// import {auth} from 'firebase/app';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n  userData: any;\r\n  userRef: AngularFireList<User> = null;\r\n  // getting from database\r\n  user_id;\r\n  email;\r\n  username;\r\n\r\n  name;\r\n  id;\r\n\r\n  // // getting data from users table\r\n  // users_array = [];\r\n  // usernames_table;\r\n  // names_table;\r\n  // emails_table;\r\n  // password_table;\r\n  private afAuth: any;\r\n\r\n  constructor(\r\n      public afStore: AngularFirestore,\r\n      public ngFireAuth: AngularFireAuth,\r\n      public router: Router,\r\n      public ngZone: NgZone,\r\n      public db: AngularFireDatabase\r\n  ) {\r\n    this.userRef = db.list('users/');\r\n    this.ngFireAuth.authState.subscribe(user => {\r\n      if (user) {\r\n        this.userData = user;\r\n        localStorage.setItem('user', JSON.stringify(this.userData));\r\n        JSON.parse(localStorage.getItem('user'));\r\n      } else {\r\n        localStorage.setItem('user', null);\r\n        JSON.parse(localStorage.getItem('user'))\r\n      }\r\n    });\r\n  }\r\n\r\n  // Login in with email/password\r\n  SignIn(email, password) {\r\n    return this.ngFireAuth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  // Register user with email/password\r\n  // RegisterUser(email, password, name, username) {\r\n  //   return this.ngFireAuth.createUserWithEmailAndPassword(email, password)\r\n  // }\r\n\r\n  RegisterUser(email, password, name, username) {\r\n    return firebase.auth().createUserWithEmailAndPassword(email, password).then((user) => {\r\n      if (user) {\r\n        console.log(user);\r\n        this.user_id = user['user'].uid;\r\n        this.email = user['user'].email;\r\n\r\n        // inserting into database\r\n        firebase.database().ref('users/' + this.user_id).set({\r\n          name: name,\r\n          usernames: username,\r\n          emails: email,\r\n          total_points: 0,\r\n          photo_profile: 'https://firebasestorage.googleapis.com/v0/b/baticca-755ef.appspot.com/o/Profile%2Fbalinese.svg?alt=media&token=ff7bf262-f05c-4780-ba9f-e7cac9a460ce'\r\n        }, (error) => {\r\n          if (error) {\r\n            console.log(error);\r\n          } else {\r\n            console.log('New User Saved');\r\n          }\r\n        });\r\n      }\r\n      return user;\r\n    }).catch((error) => {\r\n      // Handle Errors here.\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      console.log(errorMessage);\r\n      return errorMessage;\r\n      // ...\r\n    });\r\n  }\r\n\r\n  // Email verification when new user register\r\n  SendVerificationMail() {\r\n    return firebase.auth().currentUser.sendEmailVerification()\r\n        .then(() => {\r\n          this.router.navigate(['home/verify-email']);\r\n        })\r\n  }\r\n\r\n  // Recover password\r\n  PasswordRecover(passwordResetEmail) {\r\n    return this.ngFireAuth.sendPasswordResetEmail(passwordResetEmail)\r\n        .then(() => {\r\n          window.alert('Password reset email has been sent, please check your inbox.');\r\n        }).catch((error) => {\r\n          window.alert(error);\r\n        });\r\n  }\r\n\r\n  // Returns true when user is looged in\r\n  get isLoggedIn(): boolean {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    return (user !== null && user.emailVerified !== false) ? true : false;\r\n  }\r\n\r\n  // Returns true when user's email is verified\r\n  get isEmailVerified(): boolean {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    return (user.emailVerified !== false) ? true : false;\r\n  }\r\n\r\n  // Auth providers\r\n  // AuthLogin(provider) {\r\n  //   return this.ngFireAuth.signInWithPopup(provider)\r\n  //       .then((result) => {\r\n  //         this.ngZone.run(() => {\r\n  //           this.router.navigate(['dashboard']);\r\n  //         })\r\n  //         this.SetUserData(result.user);\r\n  //       }).catch((error) => {\r\n  //         window.alert(error)\r\n  //       })\r\n  // }\r\n\r\n  // Store user in localStorage\r\n  // SetUserData(user) {\r\n  //   const userRef: AngularFirestoreDocument<any> = this.afStore.doc(`users/${user.user_id}`);\r\n  //   const userData: User = {\r\n  //     user_id: user.user_id,\r\n  //     email: user.email,\r\n  //     name: user.name,\r\n  //     username: user.username,\r\n  //     emailVerified: user.emailVerified,\r\n  //     photo_profile: user.photo_profile,\r\n  //     user_point: user.user_point,\r\n  //     achivement: user.achivement,\r\n  //     total_correct_answer: user.total_correct_answer\r\n  //   }\r\n  //   return userRef.set(userData, {\r\n  //     merge: true\r\n  //   })\r\n  // }\r\n\r\n  // Sign-out navigate to home landing page\r\n  SignOut() {\r\n    return this.ngFireAuth.signOut().then(() => {\r\n      localStorage.removeItem('user');\r\n      this.router.navigate(['/']);\r\n    });\r\n  }\r\n\r\n  // // Show user's information\r\n  // userDetails() {\r\n  //   return this.ngFireAuth.user\r\n  // }\r\n\r\n  getUserData(): AngularFireList<User> {\r\n    return this.userRef;\r\n  }\r\n\r\n  // // Profile reauth\r\n  // reAuth(username: string, password: string){\r\n  //   return this.afAuth.Auth.currentUser.reauthenticateWithCredential(auth.EmailAuthProvider.credential(username, password))\r\n  // }\r\n\r\n  // updatePassword(newpassword: string){\r\n  //   return this.afAuth.auth.currentUser.updatePassword(newpassword)\r\n  // }\r\n  //\r\n  // updateEmail(newemail: string){\r\n  //   return this.afAuth.Auth.currentUser.updateEmail(newemail)\r\n  // }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {AngularFireDatabase, AngularFireList} from \"@angular/fire/database\";\r\nimport {Province} from \"./province\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProvinceService {\r\n// Database for Province\r\n  private dbPath = '/province';\r\n  provinceRef: AngularFireList<Province> = null;\r\n\r\n  constructor(private db: AngularFireDatabase) {\r\n    this.provinceRef = db.list(this.dbPath);\r\n  }\r\n\r\n  getAllProvince(): AngularFireList<Province> {\r\n    return this.provinceRef;\r\n  }\r\n}\r\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n    return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"sourceRoot":"webpack:///"}