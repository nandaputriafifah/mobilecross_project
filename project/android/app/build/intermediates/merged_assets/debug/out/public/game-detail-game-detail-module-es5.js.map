{"version":3,"sources":["webpack:///src/app/home/game-detail/game-detail.page.ts","webpack:///src/app/home/game-detail/game-detail-routing.module.ts","webpack:///src/app/home/game-detail/game-detail.module.ts","webpack:///src/app/home/game-detail/game-detail.page.html","webpack:///src/app/home/game-detail/game-detail.page.scss"],"names":["GameDetailPage","gameService","router","afDatabase","loadingCtrl","alertCtrl","route","score","today","Date","todaysDay","String","getDate","padStart","todaysMonth","getMonth","todaysYear","getFullYear","todaysHour","getHours","todaysMinute","getMinutes","getAllQuizes","snapshotChanges","pipe","changes","map","c","quiz_id","payload","key","val","subscribe","data","quizes","database","ref","on","once","getUserData","user_id","userId","auth","currentUser","uid","console","log","then","userDetailsAsObject","totalPoints","total_points","err","doDisabled","show","doDisabledSubmitButton","content","scrollToBottom","scrollToTop","slide","slideNext","lockSwipeToPrev","event","question","detail","value","selectedChoice","selectedQuestion","getActiveIndex","index","questionLength","length","answer","onAuthStateChanged","user","push","quiz_date","user_score","user_point","set","update","create","cssClass","spinner","message","duration","loading","present","onDidDismiss","navigateByUrl","header","buttons","text","handler","presentLoading","postScoreToFirebase","role","alert","selector","template","routes","path","component","GameDetailPageRoutingModule","imports","forChild","exports","GameDetailPageModule","declarations"],"mappings":"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","file":"game-detail-game-detail-module-es5.js","sourcesContent":["import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {GameService} from '../game.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {map} from 'rxjs/operators';\r\nimport {AlertController, IonContent, IonSlides, LoadingController} from '@ionic/angular';\r\nimport firebase from 'firebase';\r\nimport {AngularFireDatabase} from '@angular/fire/database';\r\n\r\n@Component({\r\n  selector: 'app-game-detail',\r\n  templateUrl: './game-detail.page.html',\r\n  styleUrls: ['./game-detail.page.scss'],\r\n})\r\nexport class GameDetailPage implements OnInit {\r\n  quizes: any;\r\n  selectedChoice: string;\r\n  selectedQuestion: string;\r\n  score = 0;\r\n  index: number;\r\n  quizTimeLimit: number;\r\n  show: boolean;\r\n  doDisabled: boolean;\r\n  doDisabledSubmitButton: boolean;\r\n  user_id: string;\r\n\r\n  totalPoints: any;\r\n  userId: any;\r\n\r\n  today = new Date();\r\n  todaysDay = String(this.today.getDate()).padStart(2, '0');\r\n  todaysMonth = String(this.today.getMonth() + 1).padStart(2, '0'); // January is 0!\r\n  todaysYear = this.today.getFullYear();\r\n  todaysHour = this.today.getHours();\r\n  todaysMinute = this.today.getMinutes();\r\n\r\n  @ViewChild('quizSlider') slide: IonSlides;\r\n  @ViewChild('content', { static: false }) content: IonContent;\r\n\r\n  constructor(\r\n      public gameService: GameService,\r\n      public router: ActivatedRoute,\r\n      public afDatabase: AngularFireDatabase,\r\n      private loadingCtrl: LoadingController,\r\n      private alertCtrl: AlertController,\r\n      private route: Router\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.gameService.getAllQuizes().snapshotChanges().pipe(\r\n        map(changes =>\r\n            changes.map(c => ({quiz_id: c.payload.key, ...c.payload.val()}))\r\n        )\r\n    ).subscribe(data => {\r\n      this.quizes = data;\r\n      firebase.database().ref('/quiz').on('value', () => {});\r\n      firebase.database().ref('/quiz').once('value', () => {});\r\n    });\r\n\r\n    this.gameService.getUserData().snapshotChanges().pipe(\r\n        map(changes =>\r\n            changes.map(c => ({user_id: c.payload.key, ...c.payload.val()}))\r\n        )\r\n    ).subscribe(() => {\r\n      this.userId = firebase.auth().currentUser.uid;\r\n      console.log('USER ID CURRENT', this.userId);\r\n      this.afDatabase.database.ref('users/' + this.userId).once('value').then( userDetailsAsObject => {\r\n\r\n        this.totalPoints = userDetailsAsObject.val().total_points;\r\n      }).catch( err => {\r\n        console.log('Error pulling /profile table inside functionName() inside componentName.component.ts');\r\n        console.log(err);\r\n      });\r\n    });\r\n\r\n    this.doDisabled = false;\r\n    this.show = false;\r\n    this.doDisabledSubmitButton = true;\r\n  }\r\n\r\n  scrollToBottom() {\r\n    this.content.scrollToBottom(300);\r\n  }\r\n\r\n  scrollToTop() {\r\n    this.content.scrollToTop(300);\r\n  }\r\n\r\n  swipeNext(){\r\n    this.slide.slideNext();\r\n    this.slide.lockSwipeToPrev(true);\r\n  }\r\n\r\n  // Get value of choice selected\r\n  choiceSelected(event, question) {\r\n    console.log('====== CHOICE SELECTED', event.detail.value);\r\n    console.log('====== CHOICE DETAIL', event.detail);\r\n    console.log('====== ANSWER', this.quizes);\r\n    this.selectedChoice = event.detail.value;\r\n    this.selectedQuestion = question;\r\n    console.log('====== QUESTION', this.selectedQuestion);\r\n\r\n  }\r\n\r\n  // This to get index of current slides\r\n  getIndexSlideChanged() {\r\n    this.slide.getActiveIndex().then(index => {\r\n      this.index = index + 1;\r\n      console.log(this.index);\r\n    });\r\n  }\r\n\r\n  getQuizResult() {\r\n    console.log('SELECTED CHOICE', this.selectedChoice);\r\n    console.log('QUIZ', this.quizes);\r\n\r\n    for (let questionLength = 0; questionLength < this.quizes.length; questionLength++) {\r\n        if (this.selectedChoice === this.quizes[questionLength].answer) {\r\n          // Add score + 10 if selected choice is equal to answer\r\n          this.score = this.score + 10;\r\n          console.log('SCOREEE', this.score);\r\n        }\r\n    }\r\n  }\r\n\r\n  showAnswer() {\r\n    this.show = true;\r\n  }\r\n\r\n  hideAnswer() {\r\n    this.show = false;\r\n  }\r\n\r\n  disabledChoices() {\r\n    this.doDisabled = true;\r\n  }\r\n\r\n  enabledChoices() {\r\n    this.doDisabled = false;\r\n  }\r\n\r\n  disabledSubmitButton() {\r\n    this.doDisabledSubmitButton = true;\r\n  }\r\n\r\n  hideSubmitButton() {\r\n    this.doDisabledSubmitButton = false;\r\n  }\r\n\r\n\r\n  postScoreToFirebase() {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        // User logged in already or has just logged in.\r\n        this.user_id = user.uid;\r\n        console.log('===USER ID===', this.user_id);\r\n        // This for post quiz history to field quiz_history in firebase\r\n        firebase.database().ref('users/' + this.user_id + '/quiz_history').push({\r\n          quiz_date: `${this.todaysDay}/${this.todaysMonth}/${this.todaysYear} ${this.todaysHour}:${this.todaysMinute}`,\r\n          user_score: this.score,\r\n          user_point: this.score / 10\r\n        });\r\n\r\n        // This for post score and point after played quiz to field points in firebase\r\n        firebase.database().ref('users/' + this.user_id + '/points').set({\r\n          user_score: this.score,\r\n          user_point: this.score / 10\r\n        });\r\n\r\n        // This for update total_points for user\r\n        firebase.database().ref('users/' + this.user_id ).update({\r\n          total_points: this.totalPoints += this.score / 10\r\n        });\r\n      } else {\r\n        // User not logged in or has just logged out.\r\n      }\r\n    });\r\n  }\r\n\r\n  async presentLoading() {\r\n    const loading = await this.loadingCtrl.create({\r\n      cssClass: 'my-custom-class',\r\n      spinner: 'dots',\r\n      message: 'Mempersiapkan hasil kuis...',\r\n      duration: 4000\r\n    });\r\n    await loading.present();\r\n\r\n    await loading.onDidDismiss().then( () => {\r\n      this.route.navigateByUrl('/home/results');\r\n      console.log('Loading dismissed!');\r\n    });\r\n  }\r\n\r\n  async presentAlert() {\r\n    const alert = await this.alertCtrl.create({\r\n      header: 'KELUAR KUIS',\r\n      message: 'Apakah kamu yakin ingin <br> mengakhiri kuis?',\r\n      buttons: [\r\n        {\r\n          text: 'YA',\r\n          handler: () =>\r\n              this.presentLoading().then(() => {\r\n                this.postScoreToFirebase();\r\n                this.route.navigateByUrl('/home/results');\r\n              })\r\n        },\r\n        {\r\n          text: 'TIDAK',\r\n          role: 'cancel'\r\n        },\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  // TO DO: Add time limit\r\n  // runTimeLimit() {\r\n  //   console.log('RUN', this.selectedChoice);\r\n  //   if (typeof this.selectedChoice === 'undefined') {\r\n  //     for (let index = 0; index <= 100; index++) {\r\n  //       if (typeof this.selectedChoice !== 'undefined'){\r\n  //         this.setPercentBar(0);\r\n  //         break;\r\n  //       }\r\n  //       this.setPercentBar(+index);\r\n  //     }\r\n  //   } else if (typeof this.selectedChoice !== 'undefined'){\r\n  //     this.setPercentBar(0);\r\n  //   }\r\n  // }\r\n  //  setPercentBar(i) {\r\n  //   setTimeout(() => {\r\n  //     let apc = (i / 100)\r\n  //     console.log(apc);\r\n  //     this.quizTimeLimit = apc;\r\n  //   }, 150 * i);\r\n  // }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { GameDetailPage } from './game-detail.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: GameDetailPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class GameDetailPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { GameDetailPageRoutingModule } from './game-detail-routing.module';\r\n\r\nimport { GameDetailPage } from './game-detail.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    GameDetailPageRoutingModule\r\n  ],\r\n  declarations: [GameDetailPage]\r\n})\r\nexport class GameDetailPageModule {}\r\n","export default \"<ion-content mode=\\\"ios\\\" #content>\\r\\n\\r\\n  <!-- Score and Question Description -->\\r\\n  <ion-grid class=\\\"ion-no-padding\\\">\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"4\\\">\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"4.5\\\">\\r\\n        <div class=\\\"ion-text-center ion-padding text-score\\\">\\r\\n          <ion-label class=\\\"text-title\\\">SKOR: {{score}}</ion-label>\\r\\n        </div>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"3.5\\\">\\r\\n        <ion-buttons class=\\\"ion-padding\\\">\\r\\n          <ion-button (click)=\\\"presentAlert()\\\"\\r\\n                      style=\\\"color: white;\\\">\\r\\n            <ion-icon name=\\\"exit-outline\\\" style=\\\"width: 100px;\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-buttons>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n    <!-- Each question will show by each slide -->\\r\\n    <ion-slides #quizSlider\\r\\n                (ionSlidesDidLoad)=\\\"getIndexSlideChanged()\\\"\\r\\n                (ionSlideWillChange)=\\\"\\r\\n                getIndexSlideChanged();\\r\\n                enabledChoices();\\r\\n                hideAnswer();\\r\\n                scrollToTop();\\r\\n                 disabledSubmitButton()\\\">\\r\\n    <ion-slide *ngFor=\\\"let quiz of quizes\\\">\\r\\n\\r\\n      <div class=\\\"ion-text-center\\\">\\r\\n        <ion-label class=\\\"text-title\\\">Pertanyaan {{index}}/10</ion-label>\\r\\n\\r\\n        <!-- Image and question -->\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n           <img src=\\\"{{quiz.quiz_image}}\\\">\\r\\n          </ion-card-header>\\r\\n          <ion-text class=\\\"text-question\\\">\\r\\n            {{quiz.question}}\\r\\n          </ion-text>\\r\\n\\r\\n          <!-- Insert choices here -->\\r\\n          <ion-list>\\r\\n            <ion-radio-group\\r\\n                    name=\\\"quiz-batik\\\"\\r\\n                    (ionChange)=\\\"choiceSelected($event, quiz.question)\\\"\\r\\n                    required\\r\\n                    ngModel\\r\\n                    #quizCtrl = \\\"ngModel\\\">\\r\\n\\r\\n              <ion-card class=\\\"card-choices\\\" *ngIf=\\\"!show\\\">\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label>{{quiz.choice1}}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\"\\r\\n                             value=\\\"{{quiz.choice1}}\\\"\\r\\n                             disabled=\\\"{{doDisabled}}\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n              </ion-card>\\r\\n\\r\\n              <ion-card class=\\\"card-choices-correct\\\"\\r\\n                        *ngIf=\\\"show && quiz.choice1 === quiz.answer\\\">\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label style=\\\"color: white;\\\">{{quiz.choice1}}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\"\\r\\n                             value=\\\"{{quiz.choice1}}\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n              </ion-card>\\r\\n\\r\\n              <ion-card class=\\\"card-choices-false\\\"\\r\\n                        *ngIf=\\\"selectedChoice === quiz.choice1 && show && quiz.choice1 !== quiz.answer\\\">\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label style=\\\"color: white;\\\">{{quiz.choice1}}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\"\\r\\n                             value=\\\"{{quiz.choice1}}\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n              </ion-card>\\r\\n\\r\\n              <ion-card class=\\\"card-choices\\\"\\r\\n                        *ngIf=\\\"show && quiz.choice1 !== quiz.answer  && selectedChoice !== quiz.choice1\\\">\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label>{{quiz.choice1}}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\"\\r\\n                             value=\\\"{{quiz.choice1}}\\\"\\r\\n                             disabled=\\\"{{doDisabled}}\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n              </ion-card>\\r\\n\\r\\n              <ion-card class=\\\"card-choices\\\" *ngIf=\\\"!show\\\">\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label>{{quiz.choice2}}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\"\\r\\n                             value=\\\"{{quiz.choice2}}\\\"\\r\\n                             disabled=\\\"{{doDisabled}}\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n              </ion-card>\\r\\n\\r\\n              <ion-card class=\\\"card-choices-correct\\\"\\r\\n                        *ngIf=\\\"show && quiz.choice2 === quiz.answer\\\">\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label style=\\\"color: white;\\\">{{quiz.choice2}}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\"\\r\\n                             value=\\\"{{quiz.choice2}}\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n              </ion-card>\\r\\n\\r\\n              <ion-card class=\\\"card-choices-false\\\"\\r\\n                        *ngIf=\\\"selectedChoice === quiz.choice2 && show && quiz.choice2 !== quiz.answer\\\">\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label style=\\\"color: white;\\\">{{quiz.choice2}}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\"\\r\\n                             value=\\\"{{quiz.choice2}}\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n              </ion-card>\\r\\n\\r\\n              <ion-card class=\\\"card-choices\\\"\\r\\n                        *ngIf=\\\"show && quiz.choice2 !== quiz.answer && selectedChoice !== quiz.choice2\\\">\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label>{{quiz.choice2}}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\"\\r\\n                             value=\\\"{{quiz.choice2}}\\\"\\r\\n                             disabled=\\\"{{doDisabled}}\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n              </ion-card>\\r\\n\\r\\n              <ion-card class=\\\"card-choices\\\" *ngIf=\\\"!show\\\">\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label>{{quiz.choice3}}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\"\\r\\n                             value=\\\"{{quiz.choice3}}\\\"\\r\\n                             disabled=\\\"{{doDisabled}}\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n              </ion-card>\\r\\n\\r\\n              <ion-card class=\\\"card-choices-correct\\\"\\r\\n                        *ngIf=\\\"show && quiz.choice3 === quiz.answer\\\">\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label style=\\\"color: white;\\\">{{quiz.choice3}}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\"\\r\\n                             value=\\\"{{quiz.choice3}}\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n              </ion-card>\\r\\n\\r\\n              <ion-card class=\\\"card-choices-false\\\"\\r\\n                        *ngIf=\\\"selectedChoice === quiz.choice3 && show && quiz.choice3 !== quiz.answer\\\">\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label style=\\\"color: white;\\\">{{quiz.choice3}}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\"\\r\\n                             value=\\\"{{quiz.choice3}}\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n              </ion-card>\\r\\n\\r\\n              <ion-card class=\\\"card-choices\\\"\\r\\n                        *ngIf=\\\"show && quiz.choice3 !== quiz.answer && selectedChoice !== quiz.choice3\\\">\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label>{{quiz.choice3}}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\"\\r\\n                             value=\\\"{{quiz.choice3}}\\\"\\r\\n                             disabled=\\\"{{doDisabled}}\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n              </ion-card>\\r\\n\\r\\n              <ion-card class=\\\"card-choices\\\" *ngIf=\\\"!show\\\">\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label>{{quiz.choice4}}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\"\\r\\n                             value=\\\"{{quiz.choice4}}\\\"\\r\\n                             disabled=\\\"{{doDisabled}}\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n              </ion-card>\\r\\n\\r\\n              <ion-card class=\\\"card-choices-correct\\\"\\r\\n                        *ngIf=\\\"show && quiz.choice4 === quiz.answer\\\">\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label style=\\\"color: white;\\\">{{quiz.choice4}}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\"\\r\\n                             value=\\\"{{quiz.choice4}}\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n              </ion-card>\\r\\n\\r\\n              <ion-card class=\\\"card-choices-false\\\"\\r\\n                        *ngIf=\\\"selectedChoice === quiz.choice4 && show && quiz.choice4 !== quiz.answer\\\">\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label style=\\\"color: white;\\\">{{quiz.choice4}}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\"\\r\\n                             value=\\\"{{quiz.choice4}}\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n              </ion-card>\\r\\n\\r\\n              <ion-card class=\\\"card-choices\\\"\\r\\n                        *ngIf=\\\"show && quiz.choice4 !== quiz.answer && selectedChoice !== quiz.choice4\\\">\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label>{{quiz.choice4}}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\"\\r\\n                             value=\\\"{{quiz.choice4}}\\\"\\r\\n                             disabled=\\\"{{doDisabled}}\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n              </ion-card>\\r\\n\\r\\n            </ion-radio-group>\\r\\n          </ion-list>\\r\\n\\r\\n          <!--   Button to get score by getQuizResult() and show answer by showAnswer()  -->\\r\\n          <ion-button type=\\\"submit\\\"\\r\\n                      *ngIf=\\\"doDisabledSubmitButton\\\"\\r\\n                      (click)=\\\"getQuizResult(); disabledChoices(); showAnswer(); hideSubmitButton();\\\"\\r\\n                      [disabled]=\\\"!quizCtrl.valid\\\"\\r\\n                      disabled=\\\"{{!doDisabledSubmitButton}}\\\">KIRIM\\r\\n          </ion-button>\\r\\n\\r\\n            <br><br>\\r\\n        </ion-card>\\r\\n\\r\\n        <!--   Scroll to bottom to see answer description -->\\r\\n        <div class=\\\"next-button\\\">\\r\\n          <ion-buttons>\\r\\n            <ion-button *ngIf=\\\"selectedChoice === quiz.answer && show\\\"\\r\\n                        (click)=\\\"scrollToBottom()\\\"\\r\\n                        style=\\\"color: white\\\">\\r\\n              <ion-icon name=\\\"arrow-down-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n          </ion-buttons>\\r\\n\\r\\n          <ion-buttons>\\r\\n            <ion-button *ngIf=\\\"selectedChoice !== quiz.answer && show\\\"\\r\\n                        (click)=\\\"scrollToBottom()\\\"\\r\\n                        style=\\\"color: white\\\">\\r\\n              <ion-icon name=\\\"arrow-down-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n          </ion-buttons>\\r\\n        </div>\\r\\n\\r\\n        <!--   Answer description -->\\r\\n        <!--   Correct answer -->\\r\\n        <ion-card>\\r\\n          <ion-item *ngIf=\\\"selectedChoice === quiz.answer && show\\\">\\r\\n            <div class=\\\"ion-nowrap\\\">\\r\\n\\r\\n              <ion-card-header>\\r\\n                <ion-card-title style=\\\"color: #283618;\\\"> JAWABAN KAMU BENAR! </ion-card-title>\\r\\n              </ion-card-header>\\r\\n\\r\\n              <ion-card-content>\\r\\n                {{quiz.answer_description}}\\r\\n              </ion-card-content>\\r\\n            </div>\\r\\n\\r\\n          </ion-item>\\r\\n\\r\\n          <!--   False answer  -->\\r\\n          <ion-item *ngIf=\\\"selectedChoice !== quiz.answer && show\\\">\\r\\n            <div class=\\\"ion-nowrap\\\">\\r\\n              <ion-card-header>\\r\\n                <ion-card-title style=\\\"color: #bf382e;\\\"> JAWABAN KAMU SALAH </ion-card-title>\\r\\n                <ion-card-subtitle>JAWABAN: {{quiz.answer}}</ion-card-subtitle>\\r\\n              </ion-card-header>\\r\\n\\r\\n              <ion-card-content>\\r\\n                {{quiz.answer_description}}\\r\\n              </ion-card-content>\\r\\n            </div>\\r\\n          </ion-item>\\r\\n        </ion-card>\\r\\n\\r\\n        <!--  Button to post score value into database  -->\\r\\n        <div class=\\\"submit-button\\\" *ngIf=\\\"show\\\">\\r\\n          <ion-button type=\\\"submit\\\"\\r\\n                      (click)=\\\"postScoreToFirebase();presentLoading()\\\"\\r\\n                      *ngIf=\\\"index === quizes.length\\\"\\r\\n                      shape=\\\"round\\\"\\r\\n                      style=\\\"height: 40px;width: 180px;font-size: 17px;\\\">LIHAT HASIL!\\r\\n          </ion-button>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"next-button\\\" *ngIf=\\\"selectedChoice === quiz.answer && show\\\">\\r\\n          <ion-buttons>\\r\\n            <ion-button type=\\\"submit\\\"\\r\\n                        shape=\\\"round\\\"\\r\\n                        *ngIf=\\\"index !== quizes.length\\\"\\r\\n                        (click)=\\\"swipeNext()\\\"\\r\\n                        [disabled]=\\\"!quizCtrl.valid\\\"\\r\\n                        style=\\\"height: 30px;color: white;\\\"> Berikutnya\\r\\n              <ion-icon  class=\\\"ion-padding-start\\\" name=\\\"arrow-forward-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n          </ion-buttons>\\r\\n        </div> <br>\\r\\n\\r\\n        <div class=\\\"next-button\\\" *ngIf=\\\"selectedChoice !== quiz.answer && show\\\">\\r\\n          <ion-buttons>\\r\\n            <ion-button type=\\\"submit\\\"\\r\\n                        shape=\\\"round\\\"\\r\\n                        *ngIf=\\\"index !== quizes.length\\\"\\r\\n                        (click)=\\\"swipeNext()\\\"\\r\\n                        [disabled]=\\\"!quizCtrl.valid\\\"\\r\\n                        style=\\\"height: 30px;color: white;\\\"> Berikutnya\\r\\n              <ion-icon  class=\\\"ion-padding-start\\\" name=\\\"arrow-forward-outline\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n          </ion-buttons>\\r\\n        </div> <br>\\r\\n      </div>\\r\\n    </ion-slide>\\r\\n    </ion-slides>\\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n\";","export default \"ion-content {\\n  --ion-background-color:#283618;\\n}\\n\\nion-card {\\n  --ion-background-color: white;\\n}\\n\\n@media only screen and (max-width: 414px) {\\n  ion-card {\\n    width: 380px;\\n  }\\n\\n  .card-choices {\\n    width: 350px;\\n  }\\n\\n  .card-choices-correct {\\n    width: 350px;\\n  }\\n\\n  .card-choices-false {\\n    width: 350px;\\n  }\\n}\\n\\n@media only screen and (max-width: 375px) {\\n  ion-card {\\n    width: 330px;\\n  }\\n\\n  .card-choices {\\n    width: 300px;\\n  }\\n\\n  .card-choices-correct {\\n    width: 300px;\\n  }\\n\\n  .card-choices-false {\\n    width: 300px;\\n  }\\n}\\n\\n@media only screen and (max-width: 320px) {\\n  ion-card {\\n    width: 290px;\\n  }\\n\\n  .card-choices {\\n    width: 260px;\\n  }\\n\\n  .card-choices-correct {\\n    width: 260px;\\n  }\\n\\n  .card-choices-false {\\n    width: 260px;\\n  }\\n}\\n\\nion-radio {\\n  --color-checked: green;\\n}\\n\\nion-item:active {\\n  background-color: green;\\n  border-color: green;\\n}\\n\\n.text-title {\\n  color: white;\\n}\\n\\n.text-score {\\n  font-size: 18px;\\n  font-weight: bold;\\n}\\n\\n.text-question {\\n  font-size: 18px;\\n  font-weight: bold;\\n  color: black;\\n}\\n\\n.card-choices {\\n  height: 45px;\\n  border-radius: 20px;\\n}\\n\\n.card-choices-correct {\\n  height: 45px;\\n  border-radius: 20px;\\n  --ion-background-color: #283618;\\n}\\n\\n.card-choices-correct ion-radio {\\n  --color-checked: #283618;\\n}\\n\\n.card-choices-false {\\n  height: 45px;\\n  border-radius: 20px;\\n  --ion-background-color: #bf382e;\\n}\\n\\n.card-choices-false ion-radio {\\n  --color-checked: #bf382e;\\n}\\n\\n.next-button {\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.submit-button {\\n  display: flex;\\n  justify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxnYW1lLWRldGFpbC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw4QkFBQTtBQUNGOztBQUVBO0VBQ0UsNkJBQUE7QUFDRjs7QUFHQTtFQUNFO0lBQ0UsWUFBQTtFQUFGOztFQUVBO0lBQ0UsWUFBQTtFQUNGOztFQUVBO0lBQ0UsWUFBQTtFQUNGOztFQUVBO0lBQ0UsWUFBQTtFQUNGO0FBQ0Y7O0FBR0E7RUFDRTtJQUNFLFlBQUE7RUFERjs7RUFJQTtJQUNFLFlBQUE7RUFERjs7RUFJQTtJQUNFLFlBQUE7RUFERjs7RUFJQTtJQUNFLFlBQUE7RUFERjtBQUNGOztBQUtBO0VBQ0U7SUFDRSxZQUFBO0VBSEY7O0VBTUE7SUFDRSxZQUFBO0VBSEY7O0VBTUE7SUFDRSxZQUFBO0VBSEY7O0VBTUE7SUFDRSxZQUFBO0VBSEY7QUFDRjs7QUFNQTtFQUNFLHNCQUFBO0FBSkY7O0FBT0E7RUFDRSx1QkFBQTtFQUNBLG1CQUFBO0FBSkY7O0FBUUE7RUFDRSxZQUFBO0FBTEY7O0FBUUE7RUFDRSxlQUFBO0VBQ0EsaUJBQUE7QUFMRjs7QUFRQTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtFQUNBLFlBQUE7QUFMRjs7QUFRQTtFQUNFLFlBQUE7RUFDQSxtQkFBQTtBQUxGOztBQVFBO0VBQ0UsWUFBQTtFQUNBLG1CQUFBO0VBQ0EsK0JBQUE7QUFMRjs7QUFNRTtFQUNFLHdCQUFBO0FBSko7O0FBUUE7RUFDRSxZQUFBO0VBQ0EsbUJBQUE7RUFDQSwrQkFBQTtBQUxGOztBQU1FO0VBQ0Usd0JBQUE7QUFKSjs7QUFRQTtFQUNFLGFBQUE7RUFDQSx1QkFBQTtBQUxGOztBQVFBO0VBQ0UsYUFBQTtFQUNBLHVCQUFBO0FBTEYiLCJmaWxlIjoiZ2FtZS1kZXRhaWwucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnQge1xyXG4gIC0taW9uLWJhY2tncm91bmQtY29sb3I6IzI4MzYxODtcclxufVxyXG5cclxuaW9uLWNhcmQge1xyXG4gIC0taW9uLWJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4vLyBRdWVzdGlvbnMgY2FyZCBmb3IgaXBob25lIDYvNy84IHBsdXMgc2NyZWVuIHJlc29sdXRpb25cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MTRweCkge1xyXG4gIGlvbi1jYXJkIHtcclxuICAgIHdpZHRoOiAzODBweDtcclxuICB9XHJcbiAgLmNhcmQtY2hvaWNlcyB7XHJcbiAgICB3aWR0aDogMzUwcHg7XHJcbiAgfVxyXG5cclxuICAuY2FyZC1jaG9pY2VzLWNvcnJlY3R7XHJcbiAgICB3aWR0aDogMzUwcHg7XHJcbiAgfVxyXG5cclxuICAuY2FyZC1jaG9pY2VzLWZhbHNle1xyXG4gICAgd2lkdGg6IDM1MHB4O1xyXG4gIH1cclxufVxyXG5cclxuLy8gUXVlc3Rpb25zIGNhcmQgZm9yIGlwaG9uZSA2LzcvOC9YIHNjcmVlbiByZXNvbHV0aW9uXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzc1cHgpIHtcclxuICBpb24tY2FyZCB7XHJcbiAgICB3aWR0aDogMzMwcHg7XHJcbiAgfVxyXG5cclxuICAuY2FyZC1jaG9pY2VzIHtcclxuICAgIHdpZHRoOiAzMDBweDtcclxuICB9XHJcblxyXG4gIC5jYXJkLWNob2ljZXMtY29ycmVjdHtcclxuICAgIHdpZHRoOiAzMDBweDtcclxuICB9XHJcblxyXG4gIC5jYXJkLWNob2ljZXMtZmFsc2V7XHJcbiAgICB3aWR0aDogMzAwcHg7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBRdWVzdGlvbnMgY2FyZCBmb3IgaXBob25lIDUvU0Ugc2NyZWVuIHJlc29sdXRpb25cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzMjBweCkge1xyXG4gIGlvbi1jYXJkIHtcclxuICAgIHdpZHRoOiAyOTBweDtcclxuICB9XHJcblxyXG4gIC5jYXJkLWNob2ljZXMge1xyXG4gICAgd2lkdGg6IDI2MHB4O1xyXG4gIH1cclxuXHJcbiAgLmNhcmQtY2hvaWNlcy1jb3JyZWN0e1xyXG4gICAgd2lkdGg6IDI2MHB4O1xyXG4gIH1cclxuXHJcbiAgLmNhcmQtY2hvaWNlcy1mYWxzZXtcclxuICAgIHdpZHRoOiAyNjBweDtcclxuICB9XHJcbn1cclxuXHJcbmlvbi1yYWRpbyB7XHJcbiAgLS1jb2xvci1jaGVja2VkOiBncmVlbjtcclxufVxyXG5cclxuaW9uLWl0ZW06YWN0aXZlIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjtcclxuICBib3JkZXItY29sb3I6IGdyZWVuO1xyXG59XHJcblxyXG5cclxuLnRleHQtdGl0bGUge1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLnRleHQtc2NvcmUge1xyXG4gIGZvbnQtc2l6ZTogMThweDtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuLnRleHQtcXVlc3Rpb24ge1xyXG4gIGZvbnQtc2l6ZTogMThweDtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbi5jYXJkLWNob2ljZXMge1xyXG4gIGhlaWdodDogNDVweDtcclxuICBib3JkZXItcmFkaXVzOiAyMHB4O1xyXG59XHJcblxyXG4uY2FyZC1jaG9pY2VzLWNvcnJlY3R7XHJcbiAgaGVpZ2h0OiA0NXB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XHJcbiAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogIzI4MzYxODtcclxuICBpb24tcmFkaW8ge1xyXG4gICAgLS1jb2xvci1jaGVja2VkOiAjMjgzNjE4O1xyXG4gIH1cclxufVxyXG5cclxuLmNhcmQtY2hvaWNlcy1mYWxzZXtcclxuICBoZWlnaHQ6IDQ1cHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcclxuICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiAjYmYzODJlO1xyXG4gIGlvbi1yYWRpbyB7XHJcbiAgICAtLWNvbG9yLWNoZWNrZWQ6ICNiZjM4MmU7XHJcbiAgfVxyXG59XHJcblxyXG4ubmV4dC1idXR0b24ge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuXHJcbi5zdWJtaXQtYnV0dG9uIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG4iXX0= */\";"]}