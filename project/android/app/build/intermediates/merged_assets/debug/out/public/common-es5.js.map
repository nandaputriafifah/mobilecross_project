{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/haptic-7b8ba70a.js","webpack:///node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","webpack:///src/app/home/game.service.ts","webpack:///src/app/home/batik.service.ts","webpack:///node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","webpack:///node_modules/@ionic/core/dist/esm/button-active-5da929d4.js","webpack:///src/app/home/authentication.service.ts","webpack:///src/app/home/province.service.ts","webpack:///node_modules/@ionic/core/dist/esm/theme-5641d27f.js"],"names":["HapticEngine","getEngine","win","window","TapticEngine","Capacitor","isPluginAvailable","Plugins","Haptics","available","isCordova","isCapacitor","impact","options","engine","style","toUpperCase","notification","selection","selectionStart","gestureSelectionStart","selectionChanged","gestureSelectionChanged","selectionEnd","gestureSelectionEnd","hapticSelection","hapticSelectionStart","hapticSelectionChanged","hapticSelectionEnd","hapticImpact","spinners","dur","circles","fn","index","total","animationDelay","angle","Math","PI","r","sin","cos","step","elmDuration","cx","cy","fill","viewBox","transform","_","lines","y1","y2","SPINNERS","GameService","db","dbPath","quizRef","userRef","totalQuiz","ref","database","randomIndex","floor","random","list","providedIn","BatikService","batikRef","attachComponent","delegate","container","component","cssClasses","componentProps","attachViewToDom","HTMLElement","Error","el","ownerDocument","createElement","forEach","c","classList","add","Object","assign","appendChild","componentOnReady","detachComponent","element","parentElement","removeViewFromDom","remove","Promise","resolve","createButtonActiveGesture","isButton","currentTouchedButton","initialTouchedButton","activateButtonAtPoint","x","y","hapticFeedbackFn","document","target","elementFromPoint","clearActiveButton","setActiveButton","button","buttonToModify","dispatchClick","click","undefined","gestureName","threshold","onStart","ev","currentX","currentY","onMove","onEnd","AuthenticationService","afStore","ngFireAuth","router","ngZone","authState","subscribe","user","userData","localStorage","setItem","JSON","stringify","parse","getItem","email","password","signInWithEmailAndPassword","name","username","auth","createUserWithEmailAndPassword","then","console","log","user_id","uid","set","usernames","emails","total_points","photo_profile","error","errorCode","code","errorMessage","message","currentUser","sendEmailVerification","navigate","passwordResetEmail","sendPasswordResetEmail","alert","signOut","removeItem","emailVerified","ProvinceService","provinceRef","hostContext","selector","closest","createColorClasses","color","cssClassMap","length","getClassList","classes","array","Array","isArray","split","filter","map","trim","getClassMap","SCHEME","openURL","url","direction","animation","test","querySelector","preventDefault","push"],"mappings":"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","file":"common-es5.js","sourcesContent":["const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionEnd();\n        }\n        else {\n            engine.gestureSelectionEnd();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","import { Injectable } from '@angular/core';\r\nimport firebase from \"firebase\";\r\nimport {AngularFireDatabase, AngularFireList} from \"@angular/fire/database\";\r\nimport {Batik} from \"./batik\";\r\nimport {Quiz} from \"./quiz\";\r\nimport {User} from \"./user\";\r\nimport {AngularFireModule} from \"@angular/fire\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GameService {\r\n  // Database path for quiz\r\n  private dbPath = '/quiz';\r\n  quizRef: AngularFireList<Quiz> = null;\r\n  userRef: AngularFireList<User> = null;\r\n  user_id;\r\n  totalQuiz: number = 10;\r\n  ref = firebase.database().ref('/quiz');\r\n  randomIndex = Math.floor(Math.random() * this.totalQuiz);\r\n\r\n  // // database = firebase.database().ref();\r\n  //\r\n  // // Get data from users table in firebase\r\n  // users_array = [];\r\n  // users_name;\r\n  // users_username;\r\n  // users_email;\r\n  // users_password;\r\n  // users_id;\r\n  //\r\n  // // Get data from quiz database\r\n  // quiz_questions = [];\r\n  // quiz_choices;\r\n  // quiz_answers = [];\r\n  // quiz_id;\r\n  // quiz_counter = 0;\r\n  //\r\n  //\r\n  // // Get data from results database\r\n  // results_user_results = [];\r\n  // results_score;\r\n  // results_user;\r\n  // results_user_id;\r\n\r\n  constructor(private db: AngularFireDatabase) {\r\n    this.quizRef = db.list(this.dbPath);\r\n    this.userRef = db.list('users/');\r\n  }\r\n\r\n  // Use this to get all data\r\n  getAllQuizes(): AngularFireList<Quiz> {\r\n    return this.quizRef;\r\n  }\r\n\r\n\r\n  // getUserId() {\r\n  //   this.user_id = firebase.auth().currentUser.uid;\r\n  //   return firebase.database().ref('users/'+ this.user_id + '/points');\r\n  // }\r\n\r\n  getUserData(): AngularFireList<User> {\r\n    return this.userRef;\r\n  }\r\n\r\n  // getUserDataById(){\r\n  //   firebase.auth().onAuthStateChanged((user) => {\r\n  //     if (user) {\r\n  //       // User logged in already or has just logged in.\r\n  //       this.user_id = user.uid;\r\n  //       console.log('===USER ID===', this.user_id);\r\n  //       return  firebase.database().ref('users/'+ this.user_id + '/points');\r\n  //     } else {\r\n  //       // User not logged in or has just logged out.\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // getUser() {\r\n  //   let user = firebase.auth().currentUser;\r\n  //   if (user) {\r\n  //     var getUserInfo = firebase.database().ref('users/' + user.uid);\r\n  //     getUserInfo.once('value', function(snapshot) {\r\n  //       console.log('GET USERRRRR', snapshot.val()); //returns net_worth, etc\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  // // quiz code\r\n  // batikQuiz(quizId) {\r\n  //   this.quiz_counter = 0;\r\n  //   // this.clearArray(this.questions);\r\n  //   const rootRef = firebase.database().ref('quiz/');\r\n  //   rootRef.once('value', (snapshot) => {\r\n  //     const value = snapshot.val();\r\n  //     for (const key in value) {\r\n  //       this.quiz_counter++;\r\n  //       this.quiz_questions.push({\r\n  //         counter: this.quiz_counter,\r\n  //         question: key,\r\n  //         answer: Object.keys(value[key]),\r\n  //         value: Object.values(value[key])\r\n  //       });\r\n  //       // console.log(this.Questionz);\r\n  //       // console.log(key);\r\n  //       // console.log(value);\r\n  //     }\r\n  //   });\r\n  //   console.log(this.quiz_questions);\r\n  //\r\n  //   return this.quiz_questions;\r\n  // }\r\n\r\n  //\r\n  // clearArray(array) {\r\n  //   for (let i = 0; i < array.length; i++) {\r\n  //     array.splice(i);\r\n  //   }\r\n  // }\r\n  //\r\n  // // get results from firebase\r\n  // getResults(userId) {\r\n  //   this.counter = 0;\r\n  //   // let resultsquestion;\r\n  //   // let gameID;\r\n  //   // let values;\r\n  //   this.clearArray(this.results);\r\n  //   return firebase.database().ref('results/' + userId +  name).once('value').then( (snapshot) => {\r\n  //     const values = snapshot.val();\r\n  //     console.log(values);\r\n  //\r\n  //     return snapshot.val();\r\n  //\r\n  //   });\r\n  // }\r\n  //\r\n  // UserInfor() {\r\n  //   firebase.auth().onAuthStateChanged((user) => {\r\n  //     // console.log(user);\r\n  //     if (user) {\r\n  //       this.user_id = user.uid;\r\n  //     } else {\r\n  //       // No user is signed in.\r\n  //     }\r\n  //   });\r\n  //\r\n  //   return this.user_id;\r\n  // }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {AngularFireDatabase, AngularFireList} from \"@angular/fire/database\";\r\nimport {Batik} from \"./batik\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BatikService {\r\n  // Database path for batik\r\n  private dbPath = '/batik';\r\n  batikRef: AngularFireList<Batik> = null;\r\n\r\n  constructor(private db: AngularFireDatabase) {\r\n    this.batikRef = db.list(this.dbPath);\r\n  }\r\n\r\n  // Use this to get all data\r\n  getAllBatik(): AngularFireList<Batik> {\r\n    return this.batikRef;\r\n  }\r\n}\r\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","import { c as writeTask } from './index-92848855.js';\nimport { createGesture } from './index-eea61379.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-7b8ba70a.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n    let currentTouchedButton;\n    let initialTouchedButton;\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const target = document.elementFromPoint(x, y);\n        if (!target || !isButton(target)) {\n            clearActiveButton();\n            return;\n        }\n        if (target !== currentTouchedButton) {\n            clearActiveButton();\n            setActiveButton(target, hapticFeedbackFn);\n        }\n    };\n    const setActiveButton = (button, hapticFeedbackFn) => {\n        currentTouchedButton = button;\n        if (!initialTouchedButton) {\n            initialTouchedButton = currentTouchedButton;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\n        hapticFeedbackFn();\n    };\n    const clearActiveButton = (dispatchClick = false) => {\n        if (!currentTouchedButton) {\n            return;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\n        /**\n         * Clicking on one button, but releasing on another button\n         * does not dispatch a click event in browsers, so we\n         * need to do it manually here. Some browsers will\n         * dispatch a click if clicking on one button, dragging over\n         * another button, and releasing on the original button. In that\n         * case, we need to make sure we do not cause a double click there.\n         */\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n            currentTouchedButton.click();\n        }\n        currentTouchedButton = undefined;\n    };\n    return createGesture({\n        el,\n        gestureName: 'buttonActiveDrag',\n        threshold: 0,\n        onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n        onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n        onEnd: () => {\n            clearActiveButton(true);\n            hapticSelectionEnd();\n            initialTouchedButton = undefined;\n        }\n    });\n};\n\nexport { createButtonActiveGesture as c };\n","import {Injectable, NgZone} from '@angular/core';\r\nimport {AngularFireAuth} from '@angular/fire/auth';\r\nimport {AngularFirestore, AngularFirestoreDocument} from '@angular/fire/firestore';\r\nimport {Router} from '@angular/router';\r\nimport {User} from './user';\r\nimport firebase from 'firebase';\r\nimport {AngularFireDatabase, AngularFireList} from '@angular/fire/database';\r\n// import {auth} from 'firebase/app';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n  userData: any;\r\n  userRef: AngularFireList<User> = null;\r\n  // getting from database\r\n  user_id;\r\n  email;\r\n  username;\r\n\r\n  name;\r\n  id;\r\n\r\n  // // getting data from users table\r\n  // users_array = [];\r\n  // usernames_table;\r\n  // names_table;\r\n  // emails_table;\r\n  // password_table;\r\n  private afAuth: any;\r\n\r\n  constructor(\r\n      public afStore: AngularFirestore,\r\n      public ngFireAuth: AngularFireAuth,\r\n      public router: Router,\r\n      public ngZone: NgZone,\r\n      public db: AngularFireDatabase\r\n  ) {\r\n    this.userRef = db.list('users/');\r\n    this.ngFireAuth.authState.subscribe(user => {\r\n      if (user) {\r\n        this.userData = user;\r\n        localStorage.setItem('user', JSON.stringify(this.userData));\r\n        JSON.parse(localStorage.getItem('user'));\r\n      } else {\r\n        localStorage.setItem('user', null);\r\n        JSON.parse(localStorage.getItem('user'))\r\n      }\r\n    });\r\n  }\r\n\r\n  // Login in with email/password\r\n  SignIn(email, password) {\r\n    return this.ngFireAuth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  // Register user with email/password\r\n  // RegisterUser(email, password, name, username) {\r\n  //   return this.ngFireAuth.createUserWithEmailAndPassword(email, password)\r\n  // }\r\n\r\n  RegisterUser(email, password, name, username) {\r\n    return firebase.auth().createUserWithEmailAndPassword(email, password).then((user) => {\r\n      if (user) {\r\n        console.log(user);\r\n        this.user_id = user['user'].uid;\r\n        this.email = user['user'].email;\r\n\r\n        // inserting into database\r\n        firebase.database().ref('users/' + this.user_id).set({\r\n          name: name,\r\n          usernames: username,\r\n          emails: email,\r\n          total_points: 0,\r\n          photo_profile: 'https://firebasestorage.googleapis.com/v0/b/baticca-755ef.appspot.com/o/Profile%2Fbalinese.svg?alt=media&token=ff7bf262-f05c-4780-ba9f-e7cac9a460ce'\r\n        }, (error) => {\r\n          if (error) {\r\n            console.log(error);\r\n          } else {\r\n            console.log('New User Saved');\r\n          }\r\n        });\r\n      }\r\n      return user;\r\n    }).catch((error) => {\r\n      // Handle Errors here.\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      console.log(errorMessage);\r\n      return errorMessage;\r\n      // ...\r\n    });\r\n  }\r\n\r\n  // Email verification when new user register\r\n  SendVerificationMail() {\r\n    return firebase.auth().currentUser.sendEmailVerification()\r\n        .then(() => {\r\n          this.router.navigate(['home/verify-email']);\r\n        })\r\n  }\r\n\r\n  // Recover password\r\n  PasswordRecover(passwordResetEmail) {\r\n    return this.ngFireAuth.sendPasswordResetEmail(passwordResetEmail)\r\n        .then(() => {\r\n          window.alert('Password reset email has been sent, please check your inbox.');\r\n        }).catch((error) => {\r\n          window.alert(error);\r\n        });\r\n  }\r\n\r\n  // Returns true when user is looged in\r\n  get isLoggedIn(): boolean {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    return (user !== null && user.emailVerified !== false) ? true : false;\r\n  }\r\n\r\n  // Returns true when user's email is verified\r\n  get isEmailVerified(): boolean {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    return (user.emailVerified !== false) ? true : false;\r\n  }\r\n\r\n  // Auth providers\r\n  // AuthLogin(provider) {\r\n  //   return this.ngFireAuth.signInWithPopup(provider)\r\n  //       .then((result) => {\r\n  //         this.ngZone.run(() => {\r\n  //           this.router.navigate(['dashboard']);\r\n  //         })\r\n  //         this.SetUserData(result.user);\r\n  //       }).catch((error) => {\r\n  //         window.alert(error)\r\n  //       })\r\n  // }\r\n\r\n  // Store user in localStorage\r\n  // SetUserData(user) {\r\n  //   const userRef: AngularFirestoreDocument<any> = this.afStore.doc(`users/${user.user_id}`);\r\n  //   const userData: User = {\r\n  //     user_id: user.user_id,\r\n  //     email: user.email,\r\n  //     name: user.name,\r\n  //     username: user.username,\r\n  //     emailVerified: user.emailVerified,\r\n  //     photo_profile: user.photo_profile,\r\n  //     user_point: user.user_point,\r\n  //     achivement: user.achivement,\r\n  //     total_correct_answer: user.total_correct_answer\r\n  //   }\r\n  //   return userRef.set(userData, {\r\n  //     merge: true\r\n  //   })\r\n  // }\r\n\r\n  // Sign-out navigate to home landing page\r\n  SignOut() {\r\n    return this.ngFireAuth.signOut().then(() => {\r\n      localStorage.removeItem('user');\r\n      this.router.navigate(['/']);\r\n    });\r\n  }\r\n\r\n  // // Show user's information\r\n  // userDetails() {\r\n  //   return this.ngFireAuth.user\r\n  // }\r\n\r\n  getUserData(): AngularFireList<User> {\r\n    return this.userRef;\r\n  }\r\n\r\n  // // Profile reauth\r\n  // reAuth(username: string, password: string){\r\n  //   return this.afAuth.Auth.currentUser.reauthenticateWithCredential(auth.EmailAuthProvider.credential(username, password))\r\n  // }\r\n\r\n  // updatePassword(newpassword: string){\r\n  //   return this.afAuth.auth.currentUser.updatePassword(newpassword)\r\n  // }\r\n  //\r\n  // updateEmail(newemail: string){\r\n  //   return this.afAuth.Auth.currentUser.updateEmail(newemail)\r\n  // }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {AngularFireDatabase, AngularFireList} from \"@angular/fire/database\";\r\nimport {Province} from \"./province\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProvinceService {\r\n// Database for Province\r\n  private dbPath = '/province';\r\n  provinceRef: AngularFireList<Province> = null;\r\n\r\n  constructor(private db: AngularFireDatabase) {\r\n    this.provinceRef = db.list(this.dbPath);\r\n  }\r\n\r\n  getAllProvince(): AngularFireList<Province> {\r\n    return this.provinceRef;\r\n  }\r\n}\r\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n    return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"]}